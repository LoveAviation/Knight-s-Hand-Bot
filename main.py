import os
import threading
import time
import requests
from io import BytesIO
from PIL import Image
from flask import Flask
import telebot
from telebot import types

TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

bot = telebot.TeleBot(TOKEN)

# ===== 2. Flask —Å–µ—Ä–≤–µ—Ä =====
app = Flask(__name__)

@app.route('/')
def home():
    return "I'm alive!"  # Render –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –∂–∏–≤ –ª–∏ —Å–µ—Ä–≤–µ—Ä

canvas_command = "–•–æ–ª—Å—Ç —Å—é–¥–∞!"

menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
canvas = types.KeyboardButton(canvas_command)
menu.add(canvas)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç! \n–Ø –ø–æ–∫–∞ —á—Ç–æ –º–æ–≥—É —Ç–æ–ª—å–∫–æ –ø–æ–¥–Ω–æ—Å–∏—Ç—å —Ö–æ–ª—Å—Ç –≤ —á–∞—Ç –≥—Ä—É–ø–ø—ã, –Ω–æ –Ω–∞–¥–µ—é—Å—å —Å–º–æ–≥—É –±–æ–ª—å—à–µ–µ!", reply_markup=menu)

@bot.message_handler(content_types=['text'])
def text_messages(message):
    if message.text == canvas_command:
        # –°–æ–∑–¥–∞—ë–º –±–µ–ª–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1200x800 –ø–∏–∫—Å–µ–ª–µ–π)
        img = Image.new("RGB", (1200, 800), color="white")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–º—è—Ç—å (—á—Ç–æ–±—ã –Ω–µ –ø–∏—Å–∞—Ç—å –Ω–∞ –¥–∏—Å–∫)
        bio = BytesIO()
        bio.name = 'canvas.jpg'
        img.save(bio, 'JPEG')
        bio.seek(0)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —á–∞—Ç
        bot.send_photo(message.chat.id, bio, caption="–í–∞—à —á–∏—Å—Ç—ã–π —Ö–æ–ª—Å—Ç, —Å—ç—Ä!")

        bio.close()
        del img


# ===== 4. Keep-alive (—Å–∞–º–æ–ø–∏–Ω–≥) =====
def keep_alive():
    """
    –§—É–Ω–∫—Ü–∏—è –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç –ø–∏–Ω–≥—É–µ—Ç —Å–∞–º Render-—Å–µ—Ä–≤–∏—Å,
    —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –Ω–µ "—É—Å–Ω—É–ª".
    """
    url = "https://knight-s-hand-bot.onrender.com"  # üëà –∑–∞–º–µ–Ω–∏ –Ω–∞ –∞–¥—Ä–µ—Å —Å–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    while True:
        try:
            requests.get(url)
            print("‚úÖ Self-ping sent to keep the app alive")
        except Exception as e:
            print(f"‚ö†Ô∏è Ping failed: {e}")
        time.sleep(600)  # –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç

# ===== 5. –ó–∞–ø—É—Å–∫ =====
if __name__ == "__main__":
    # –û—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ—Ç–æ–∫–∏: –æ–¥–∏–Ω –¥–ª—è Flask, –æ–¥–∏–Ω –¥–ª—è –±–æ—Ç–∞, –æ–¥–∏–Ω –¥–ª—è –ø–∏–Ω–≥–∞
    threading.Thread(target=keep_alive, daemon=True).start()
    threading.Thread(target=lambda: bot.infinity_polling(), daemon=True).start()

    # Flask —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç Render-–∞
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)